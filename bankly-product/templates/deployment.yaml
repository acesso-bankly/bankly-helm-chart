{{- if or (eq .Values.environment "production") (eq .Values.environment "sandbox") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-{{ .Values.environment  }}-deployment-canary
  namespace: {{ .Values.namespace }}
  labels:
    app: application-bankly
    helm-package: bankly-product
    release: {{ .Release.Name }}
    environment: {{ .Values.environment  }}
   
    context: "{{ .Values.tagResources.context }}"
    type: "{{ .Values.tagResources.type }}"
    cc: "{{ .Values.tagResources.cc }}"
    product: "{{ .Values.tagResources.product }}"
    isArm64: "{{ .Values.isArm64 }}"
spec:
  {{- if eq .Values.isCanary true }}
  replicas: 1
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      environment: {{ .Values.environment  }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        environment: {{ .Values.environment  }}
        version: canary
        isArm64: "{{ .Values.isArm64 }}"
    spec:
      nodeSelector:
        type: "{{ .Values.tagResources.context }}"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                {{- if .Values.isArm64 }}
                - arm64
                {{- else }}
                - amd64
                {{- end }}

      priorityClassName: {{ .Values.priorityClassName }}
  
      {{- if .Values.volumes }}
      volumes:
      {{- toYaml .Values.volumes | nindent 12 }}
      {{- end }}

      {{- if eq .Values.serviceAccount.enabled true }}      
      serviceAccountName: {{ .Values.service.name }}-{{ .Values.environment  }}-serviceaccount
      {{- end }}
      containers:
        - name: {{ .Values.service.name }}-pod
          image: {{ .Values.containerImage }}
          imagePullPolicy: IfNotPresent

          ports:
          - name: http
            containerPort: {{ .Values.containerPort }}
            protocol: TCP

          {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 12 }}     
          {{- end }}
          
          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            
          env:
            - name: SERVICE_NAME
              value: {{ .Values.service.name }}
            - name: SERVICE_VERSION
              value: {{ ( splitList ":" .Values.containerImage ) | last }}
            - name: AWS_REGION
              value: {{ .Values.region }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.region }}

          {{- if eq .Values.environment "staging" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Staging-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Staging-{{ .Values.region }}"
            - name: NODE_ENV
              value: "staging-{{ .Values.region }}"
          {{- if .Values.stagingEnvironment }}
          {{- toYaml .Values.stagingEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if eq .Values.environment "testing" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Testing-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Testing-{{ .Values.region }}"
            - name: NODE_ENV
              value: "testing-{{ .Values.region }}"
          {{- if .Values.testingEnvironment }}
          {{- toYaml .Values.testingEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if eq .Values.environment "sandbox" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Sandbox-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Sandbox-{{ .Values.region }}"
            - name: NODE_ENV
              value: "sandbox-{{ .Values.region }}"
          {{- if .Values.sandboxEnvironment }}
          {{- toYaml .Values.sandboxEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if eq .Values.environment "production" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Production-{{ .Values.region }}"
            - name: NODE_ENV
              value: "production-{{ .Values.region }}"
          {{- if .Values.productionEnvironment }}          
          {{- toYaml .Values.productionEnvironment | nindent 12 }}
          {{- end }}      
          {{- end }}         
{{- end }}
---
{{- if eq .Values.isCanary false }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-{{ .Values.environment  }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: application-bankly
    helm-package: bankly-product
    release: {{ .Release.Name }}
    environment: {{ .Values.environment  }}

    context: "{{ .Values.tagResources.context }}"
    type: "{{ .Values.tagResources.type }}"
    cc: "{{ .Values.tagResources.cc }}"
    product: "{{ .Values.tagResources.product }}"
    isArm64: "{{ .Values.isArm64 }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      environment: {{ .Values.environment  }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        environment: {{ .Values.environment }}
        version: safe
        isArm64: "{{ .Values.isArm64 }}"
    spec:
      nodeSelector:
        type: "{{ .Values.tagResources.context }}"    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                {{- if .Values.isArm64 }}
                - arm64
                {{- else }}
                - amd64
                {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- if .Values.volumes }}
      volumes:
      {{- toYaml .Values.volumes | nindent 12 }}
      {{- end }}

      {{- if eq .Values.serviceAccount.enabled true }}      
      serviceAccountName: {{ .Values.service.name }}-{{ .Values.environment  }}-serviceaccount
      {{- end }}
      containers:
        - name: {{ .Values.service.name }}-pod
          image: {{ .Values.containerImage }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP 
          
          {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 12 }}     
          {{- end }}

          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          env:
            - name: SERVICE_NAME
              value: {{ .Values.service.name }}
            - name: SERVICE_VERSION
              value: {{ ( splitList ":" .Values.containerImage ) | last }}
            - name: AWS_REGION
              value: {{ .Values.region }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.region }}

          {{- if eq .Values.environment "staging" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Staging-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Staging-{{ .Values.region }}"
            - name: NODE_ENV
              value: "staging-{{ .Values.region }}"
          {{- if .Values.stagingEnvironment }}
          {{- toYaml .Values.stagingEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if eq .Values.environment "testing" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Testing-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Testing-{{ .Values.region }}"
            - name: NODE_ENV
              value: "testing-{{ .Values.region }}"
          {{- if .Values.testingEnvironment }}
          {{- toYaml .Values.testingEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if eq .Values.environment "sandbox" }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Sandbox-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Sandbox-{{ .Values.region }}"
            - name: NODE_ENV
              value: "sandbox-{{ .Values.region }}"
          {{- if .Values.sandboxEnvironment }}
          {{- toYaml .Values.sandboxEnvironment | nindent 12 }}
          {{- end }}
          {{- end }}
          
          {{- if (eq .Values.environment "production") }}
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production-{{ .Values.region }}"
            - name: DOTNETCORE_ENVIRONMENT
              value: "Production-{{ .Values.region }}"
            - name: NODE_ENV
              value: "production-{{ .Values.region }}"
          {{- if .Values.productionEnvironment }}          
          {{- toYaml .Values.productionEnvironment | nindent 12 }}
          {{- end }}      
          {{- end }}      
{{- end }}
