namespace: default

isCanary: false
environment: staging
region: us-east-1
isArm64: true

service:
  name: default-service

containerImage: nginx:last
containerPort: 80

priorityClassName: medium-priority

resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 60m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /hc
    port: 80
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 3
  timeoutSeconds: 5
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /liveness
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 15
  failureThreshold: 3
  timeoutSeconds: 5
  successThreshold: 1

hpa:
  cpuAverageUtilization: 70
  memoryAverageUtilization: 90
  minReplicas: 3
  maxReplicas: 10

hpaKeda:
  pollingInterval: 20
  minReplicaCount: 2
  maxReplicaCount: 10
  triggers: {}

volumes: {}
volumeMounts: {}

istioGateway:
  enable: true
  name: 'root-platform-gateway'
  namespace: 'root-platform'
  retriesEnable: false
  retries:
    attempts: 3
    perTryTimeout: 2s
    retryOn: '500'
    retryRemoteLocalities: true

serviceAccount:
  enabled: false
  awsRoleArnStagingUsEast1: ''
  awsRoleArnStagingUsWest2: ''
  awsRoleArnTestingUsEast1: ''
  awsRoleArnTestingUsWest2: ''
  awsRoleArnSandbox: ''
  awsRoleArnProductionUsEast1: ''
  awsRoleArnProductionUsWest2: ''

tagResources:
  context: 'Platform'
  type: 'shared'
  cc: 999
  product: 'Gringotts'

configMapData: {}

stagingEnvironment: {}
testingEnvironment: {}
sandboxEnvironment: {}
productionEnvironment: {}

podDisruptionBudget:
  minAvailable: 2

cronjobs:
  enable: false
  jobOnly: false
  jobs: {}


observabilityInjectionType: 'none' #none, datadog